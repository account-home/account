<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">
    <!--spring配置文件-->
    <context:component-scan base-package="antmap.web.oa">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
    </context:component-scan>
    <!--自定义业务文件存储-->
    <!--<bean id="fdFileService" class="DirFdFileService   MongoDbFdFileServiceImpl"></bean>-->

    <!--多数据源配置 DirDataSourceConfigFileServiceImpl   MongoDbDataSourceConfigFileServiceImpl-->
    <bean id="configFileService" class="antmap.web.oa.service.formdesign.impl.MongoDbDataSourceConfigFileServiceImpl"></bean>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="name" value="平台数据源"></property>
        <!-- 基本属性 url、user、password -->
        <property name="url" value="jdbc:oracle:thin:@192.168.10.21:1521:orcl"/>
        <property name="username" value="lttask"/>
        <property name="password" value="lttask"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="40"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="select 1 from dual"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <!--写入日志时间间隔-->
        <property name="timeBetweenLogStatsMillis" value="300000"></property>
        <!-- 配置监控统计拦截的filters -->
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>

                <ref bean="wall-filter"/>
            </list>
        </property>
    </bean>
    <bean id="dynamicDataSource" class="antmap.web.oa.datasource.DynamicDataSource" init-method="init"
          destroy-method="close">
        <property name="lenientFallback" value="false"></property>
        <property name="targetDataSources">
            <map key-type="java.lang.String">
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSource"></property>
    </bean>
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter"/>
    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="config" ref="wall-config"/>
    </bean>
    <bean id="wall-config" class="com.alibaba.druid.wall.WallConfig">
        <property name="createTableAllow" value="false"></property>
        <property name="dropTableAllow" value="false"></property>
        <property name="truncateAllow" value="false"></property>
        <property name="multiStatementAllow" value="true"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dynamicDataSource"/>
        <property name="mapperLocations">
            <list>
                <value>classpath*:sqlmap/*.xml</value>
            </list>
        </property>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
    </bean>
    <!-- TKmybatis自动扫描注册Mybatis mapper -->
    <!-- <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
         <property name="basePackage" value="antmap.web.oa.dao"/>
         <property name="properties">
             <value>
                 mappers=tk.mybatis.mapper.common.Mapper,tk.mybatis.mapper.common.special.InsertListMapper
             </value>
         </property>
         <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
     </bean>-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="antmap.web.oa.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dynamicDataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="defaultEncoding" value="utf-8"></property>
        <property name="fileEncodings" value="utf-8"></property>
        <property name="basenames">
            <array>
                <value>classpath:messages/messages</value>
                <value>classpath:org/springframework/security/messages</value>
            </array>
        </property>
    </bean>
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"/>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>antmap.web.oa.service.*,antmap.web.oa.workflowservice.*</value>
                <value>antmap.web.oa.dao.*</value>
            </list>
        </property>
    </bean>
    <aop:config proxy-target-class="true">
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut"/>
    </aop:config>
    <bean name="jCacheManagerFactoryBean" class="org.springframework.cache.jcache.JCacheManagerFactoryBean">
        <property name="cacheManagerUri" value="classpath:spring/ehcache.xml"></property>
    </bean>
    <bean name="cacheManager" class="org.springframework.cache.jcache.JCacheCacheManager">
        <property name="cacheManager" ref="jCacheManagerFactoryBean"></property>
    </bean>

    <cache:annotation-driven/>


    <mongo:mongo-client id="mongoClient" host="192.168.10.21" port="27017">
        <mongo:client-options write-concern="SAFE"/>
    </mongo:mongo-client>
    <mongo:db-factory id="mongoDbFactory" dbname="javaoa" mongo-ref="mongoClient"/>
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
    </bean>

    <!--消息队列配置-->
    <!--
    <import resource="applicationContext-rabbitmq.xml"></import>
     -->


</beans>